version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: makemelearn_postgres
    environment:
      POSTGRES_DB: makemelearn
      POSTGRES_USER: makemelearn_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-makemelearn_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - makemelearn_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U makemelearn_user -d makemelearn"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend Node.js
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: makemelearn_api
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://makemelearn_user:${POSTGRES_PASSWORD:-makemelearn_secure_password}@postgres:5432/makemelearn
      CORS_ORIGIN: https://makemelearn.fr,https://inscription.makemelearn.fr
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - makemelearn_network
      - traefik
    restart: unless-stopped
    labels:
      # Traefik configuration
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      
      # API endpoint sur inscription.makemelearn.fr
      - "traefik.http.routers.makemelearn-api.rule=Host(`inscription.makemelearn.fr`)"
      - "traefik.http.routers.makemelearn-api.entrypoints=websecure"
      - "traefik.http.routers.makemelearn-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.makemelearn-api.loadbalancer.server.port=3000"
      
      # Headers security
      - "traefik.http.middlewares.makemelearn-api-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.makemelearn-api-headers.headers.sslredirect=true"
      - "traefik.http.routers.makemelearn-api.middlewares=makemelearn-api-headers"

  # Frontend statique
  frontend:
    image: nginx:alpine
    container_name: makemelearn_frontend
    volumes:
      - ./:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - traefik
    restart: unless-stopped
    labels:
      # Traefik configuration pour le frontend
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      
      # Frontend sur makemelearn.fr
      - "traefik.http.routers.makemelearn-frontend.rule=Host(`makemelearn.fr`) || Host(`www.makemelearn.fr`)"
      - "traefik.http.routers.makemelearn-frontend.entrypoints=websecure"
      - "traefik.http.routers.makemelearn-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.makemelearn-frontend.loadbalancer.server.port=80"
      
      # Redirect www to non-www
      - "traefik.http.middlewares.makemelearn-redirect-www.redirectregex.regex=^https://www\\.makemelearn\\.fr/(.*)"
      - "traefik.http.middlewares.makemelearn-redirect-www.redirectregex.replacement=https://makemelearn.fr/$${1}"
      - "traefik.http.routers.makemelearn-frontend.middlewares=makemelearn-redirect-www"

volumes:
  postgres_data:
    driver: local

networks:
  makemelearn_network:
    driver: bridge
  traefik:
    external: true